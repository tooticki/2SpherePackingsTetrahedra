#include <boost/numeric/interval.hpp>
using namespace boost::numeric;
using namespace interval_lib;

#include <array>

// Fix rounding policies for the transcendental functions
typedef interval<double, policies<save_state<rounded_transc_std<double>>, checking_base<double>>> I;

typedef std::array<I,6> block; // 5 pour gagner 1/6 de m√©moire ? 96 bits, i.e. 8bits for each I
 // maximum nb of blocks in memory
//const int maxactifs=20000000; //32% mem
const int maxactifs=50000000;

// size ratio for halite
I r=sqrt(I(2))-I(1);
I u=I(1);

// radii
I ra=u;
I rb=u;
I rc=u;
I rd=u;


// radius of the sphere support of a tetrahedron
#include "radius_general.cpp"
// length of ac as a function of the other edge length and a radius r optimized for radii
#include "ac_optimized.cpp"
// other routines for tetrahedra (volume, angles, density etc)
#include "routines.cpp"
// task pool for parallel execution
//#include "task_pool.cpp"

int main(){

    block B =  { hull(2.00000000000000000000000000000000000000000000000000,2.00000000000000000000000000000000000000000000000000),
	     hull(2.00000000000000000000000000000000000000000000000000,2.82842712474619029094924371747765690088272094726562),
	     hull(2.00000000000000000000000000000000000000000000000000,2.00005393382161855697631835937500000000000000000000),
	     hull(2.00000000000000000000000000000000000000000000000000,2.00005393382161855697631835937500000000000000000000),
	     hull(2.82831920869648456573486328125000000000000000000000,2.82837314251810312271118164062500000000000000000000),
	     hull(2.05522847175598144531250000000000000000000000000000,2.05533633939921855926513671875000000000000000000000) 
    };
    I acc = ac(B, false);
    printf ("%f,  %f", acc.lower(), acc.upper());
    return 0;
// b2= (
// RIF(2.00000000000000000000000000000000000000000000000000,2.00000000000000000000000000000000000000000000000000),
// RIF(2.00000000000000000000000000000000000000000000000000,2.82842712474619029094924371747765690088272094726562),
// RIF(2.00000000000000000000000000000000000000000000000000,2.00010786764323711395263671875000000000000000000000),
// RIF(2.02761411666870117187500000000000000000000000000000,2.02772198617458343505859375000000000000000000000000),
// RIF(2.82605398818850517272949218750000000000000000000000,2.82626972347497940063476562500000000000000000000000),
// RIF(2.01380705833435058593750000000000000000000000000000,2.01402279362082481384277343750000000000000000000000) 
// )
// b3= (
// RIF(2.00000000000000000000000000000000000000000000000000,2.00000000000000000000000000000000000000000000000000),
// RIF(2.00000000000000000000000000000000000000000000000000,2.82842712474619029094924371747765690088272094726562),
// RIF(2.01380705833435058593750000000000000000000000000000,2.01391492597758769989013671875000000000000000000000),
// RIF(2.00000000000000000000000000000000000000000000000000,2.00021573528647422790527343750000000000000000000000),
// RIF(2.82605398818850517272949218750000000000000000000000,2.82626972347497940063476562500000000000000000000000),
// RIF(2.02761411666870117187500000000000000000000000000000,2.02772198617458343505859375000000000000000000000000) 
// )
// b4= (
// RIF(2.00000000000000000000000000000000000000000000000000,2.00000000000000000000000000000000000000000000000000),
// RIF(2.00000000000000000000000000000000000000000000000000,2.82842712474619029094924371747765690088272094726562),
// RIF(2.00000000000000000000000000000000000000000000000000,2.00021573528647422790527343750000000000000000000000),
// RIF(2.00000000000000000000000000000000000000000000000000,2.00021573528647422790527343750000000000000000000000),
// RIF(2.82562251761555671691894531250000000000000000000000,2.82583825290203094482421875000000000000000000000000),
// RIF(2.02761411666870117187500000000000000000000000000000,2.02782985568046569824218750000000000000000000000000) 
// )
// b5= (
// RIF(2.00000000000000000000000000000000000000000000000000,2.00000000000000000000000000000000000000000000000000),
// RIF(2.00000000000000000000000000000000000000000000000000,2.82842712474619029094924371747765690088272094726562),
// RIF(2.00000000000000000000000000000000000000000000000000,2.00010786764323711395263671875000000000000000000000),
// RIF(2.00064720585942268371582031250000000000000000000000,2.00086294114589691162109375000000000000000000000000),
// RIF(2.82562251761555671691894531250000000000000000000000,2.82583825290203094482421875000000000000000000000000),
// RIF(2.04293156042695045471191406250000000000000000000000,2.04314729571342468261718750000000000000000000000000) 
// )
// b6= (
// RIF(2.00000000000000000000000000000000000000000000000000,2.00000000000000000000000000000000000000000000000000),
// RIF(2.00000000000000000000000000000000000000000000000000,2.82842712474619029094924371747765690088272094726562),
// RIF(2.00000000000000000000000000000000000000000000000000,2.00010786764323711395263671875000000000000000000000),
// RIF(2.01380705833435058593750000000000000000000000000000,2.01402279362082481384277343750000000000000000000000),
// RIF(2.82583825290203094482421875000000000000000000000000,2.82605398818850517272949218750000000000000000000000),
// RIF(2.02761411666870117187500000000000000000000000000000,2.02772198617458343505859375000000000000000000000000) 
// )
    }
